<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wei.boot.mapper.WorkerMapper" >
  <resultMap id="BaseResultMap" type="com.wei.boot.model.Worker" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="birthplace_code" property="birthplaceCode" jdbcType="INTEGER" />
    <result column="work_year" property="workYear" jdbcType="INTEGER" />
    <result column="marital_status" property="maritalStatus" jdbcType="INTEGER" />
    <result column="workplace_code" property="workplaceCode" jdbcType="INTEGER" />
    <result column="expect_salary" property="expectSalary" jdbcType="INTEGER" />
    <result column="work_status" property="workStatus" jdbcType="INTEGER" />
    <result column="nation" property="nation" jdbcType="INTEGER" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="jobtype_name" property="jobtypeName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="language_level" property="languageLevel" jdbcType="INTEGER" />
    <result column="work_expect" property="workExpect" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="night_work" property="nightWork" jdbcType="INTEGER" />
    <result column="souce" property="souce" jdbcType="INTEGER" />
    <result column="degree" property="degree" jdbcType="INTEGER" />
    <result column="profile" property="profile" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="INTEGER" />
    <result column="real_name" property="createUserName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    id, name, photo, sex, age, telephone, idcard, birthday, birthplace_code, work_year, marital_status, 
    workplace_code, expect_salary, work_status, nation, position, address, language_level, 
    work_expect, email, title, night_work, souce, degree, profile, description, jobtype_name, create_time, create_user, update_time, 
    update_user
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wei.boot.model.WorkerExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_yx_worker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_yx_worker
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    delete from t_yx_worker
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wei.boot.model.WorkerExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    delete from t_yx_worker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wei.boot.model.Worker" >
    <selectKey resultType="int" order="AFTER" keyProperty="id">
        SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_yx_worker (id, name, photo, 
      sex, telephone, idcard, 
      birthday, birthplace_code, work_year, 
      marital_status, workplace_code, expect_salary, 
      work_status, nation, position, 
      address, language_level, work_expect, 
      email, title, night_work, 
      souce, create_time, create_user, 
      update_time, update_user)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{birthplaceCode,jdbcType=INTEGER}, #{workYear,jdbcType=INTEGER}, 
      #{maritalStatus,jdbcType=INTEGER}, #{workplaceCode,jdbcType=INTEGER}, #{expectSalary,jdbcType=INTEGER}, 
      #{workStatus,jdbcType=INTEGER}, #{nation,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{languageLevel,jdbcType=INTEGER}, #{workExpect,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{nightWork,jdbcType=INTEGER}, 
      #{souce,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wei.boot.model.Worker">
	  <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
	      select LAST_INSERT_ID()
	  </selectKey>
    insert into t_yx_worker
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="idcard != null and idcard != ''">
        idcard,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="birthplaceCode != null" >
        birthplace_code,
      </if>
      <if test="workYear != null" >
        work_year,
      </if>
      <if test="maritalStatus != null" >
        marital_status,
      </if>
      <if test="workplaceCode != null" >
        workplace_code,
      </if>
      <if test="expectSalary != null" >
        expect_salary,
      </if>
      <if test="workStatus != null" >
        work_status,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="languageLevel != null" >
        language_level,
      </if>
      <if test="workExpect != null" >
        work_expect,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="nightWork != null" >
        night_work,
      </if>
      <if test="souce != null" >
        souce,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="profile != null" >
        profile,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="jobtypeName != null" >
        jobtype_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null and idcard != ''">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="birthplaceCode != null" >
        #{birthplaceCode,jdbcType=INTEGER},
      </if>
      <if test="workYear != null" >
        #{workYear,jdbcType=INTEGER},
      </if>
      <if test="maritalStatus != null" >
        #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="workplaceCode != null" >
        #{workplaceCode,jdbcType=INTEGER},
      </if>
      <if test="expectSalary != null" >
        #{expectSalary,jdbcType=INTEGER},
      </if>
      <if test="workStatus != null" >
        #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="languageLevel != null" >
        #{languageLevel,jdbcType=INTEGER},
      </if>
      <if test="workExpect != null" >
        #{workExpect,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="nightWork != null" >
        #{nightWork,jdbcType=INTEGER},
      </if>
      <if test="souce != null" >
        #{souce,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=INTEGER},
      </if>
      <if test="profile != null" >
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="jobtypeName != null" >
        #{jobtypeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wei.boot.model.WorkerExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    select count(*) from t_yx_worker
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    update t_yx_worker
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.birthplaceCode != null" >
        birthplace_code = #{record.birthplaceCode,jdbcType=INTEGER},
      </if>
      <if test="record.workYear != null" >
        work_year = #{record.workYear,jdbcType=INTEGER},
      </if>
      <if test="record.maritalStatus != null" >
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.workplaceCode != null" >
        workplace_code = #{record.workplaceCode,jdbcType=INTEGER},
      </if>
      <if test="record.expectSalary != null" >
        expect_salary = #{record.expectSalary,jdbcType=INTEGER},
      </if>
      <if test="record.workStatus != null" >
        work_status = #{record.workStatus,jdbcType=INTEGER},
      </if>
      <if test="record.nation != null" >
        nation = #{record.nation,jdbcType=INTEGER},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.languageLevel != null" >
        language_level = #{record.languageLevel,jdbcType=INTEGER},
      </if>
      <if test="record.workExpect != null" >
        work_expect = #{record.workExpect,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.nightWork != null" >
        night_work = #{record.nightWork,jdbcType=INTEGER},
      </if>
      <if test="record.souce != null" >
        souce = #{record.souce,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    update t_yx_worker
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      birthplace_code = #{record.birthplaceCode,jdbcType=INTEGER},
      work_year = #{record.workYear,jdbcType=INTEGER},
      marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      workplace_code = #{record.workplaceCode,jdbcType=INTEGER},
      expect_salary = #{record.expectSalary,jdbcType=INTEGER},
      work_status = #{record.workStatus,jdbcType=INTEGER},
      nation = #{record.nation,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      language_level = #{record.languageLevel,jdbcType=INTEGER},
      work_expect = #{record.workExpect,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      night_work = #{record.nightWork,jdbcType=INTEGER},
      souce = #{record.souce,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wei.boot.model.Worker" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    update t_yx_worker
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null and idcard != ''">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="birthplaceCode != null" >
        birthplace_code = #{birthplaceCode,jdbcType=INTEGER},
      </if>
      <if test="workYear != null" >
        work_year = #{workYear,jdbcType=INTEGER},
      </if>
      <if test="maritalStatus != null" >
        marital_status = #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="workplaceCode != null" >
        workplace_code = #{workplaceCode,jdbcType=INTEGER},
      </if>
      <if test="expectSalary != null" >
        expect_salary = #{expectSalary,jdbcType=INTEGER},
      </if>
      <if test="workStatus != null" >
        work_status = #{workStatus,jdbcType=INTEGER},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=INTEGER},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="languageLevel != null" >
        language_level = #{languageLevel,jdbcType=INTEGER},
      </if>
      <if test="workExpect != null" >
        work_expect = #{workExpect,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="nightWork != null" >
        night_work = #{nightWork,jdbcType=INTEGER},
      </if>
      <if test="souce != null" >
        souce = #{souce,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=INTEGER},
      </if>
      <if test="profile != null" >
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="jobtypeName != null" >
        jobtype_name = #{jobtypeName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wei.boot.model.Worker" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 30 11:23:45 CST 2018.
    -->
    update t_yx_worker
    set name = #{name,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      <if test="idcard != null and idcard != ''">
      	idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      birthday = #{birthday,jdbcType=DATE},
      birthplace_code = #{birthplaceCode,jdbcType=INTEGER},
      work_year = #{workYear,jdbcType=INTEGER},
      marital_status = #{maritalStatus,jdbcType=INTEGER},
      workplace_code = #{workplaceCode,jdbcType=INTEGER},
      expect_salary = #{expectSalary,jdbcType=INTEGER},
      work_status = #{workStatus,jdbcType=INTEGER},
      nation = #{nation,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      language_level = #{languageLevel,jdbcType=INTEGER},
      work_expect = #{workExpect,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      night_work = #{nightWork,jdbcType=INTEGER},
      souce = #{souce,jdbcType=INTEGER},
      degree = #{degree,jdbcType=INTEGER},
      profile = #{profile,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      jobtype_name = #{jobtypeName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="map" >
  	SELECT
		t.id, t.name, t.photo, t.sex, t.age, t.telephone, t.idcard, t.birthday, t.birthplace_code, t.work_year, t.marital_status, 
		t.workplace_code, t.expect_salary, t.work_status, t.nation, t.position, t.address, t.language_level, jobtype_name,
		t.work_expect, t.email, t.title, t.night_work, t.souce, t.degree, t.profile, t.description, t.create_time, t.create_user,
		t.update_time, t.update_user,
		u.real_name 
	FROM
		t_yx_worker t,t_sys_user u 
	<where>
		t.create_user = u.id
		and t.id &lt;= (
			select id from t_yx_worker x
			<where>
				<if test="idcard != null and idcard != ''">
					and x.idcard = #{idcard,jdbcType=VARCHAR}
				</if>
				<if test="telephone != null and telephone != ''">
					and x.telephone = #{telephone,jdbcType=VARCHAR}
				</if>
				<if test="minAge != null and minAge != ''">
					and x.age &gt;= #{minAge,jdbcType=INTEGER}
				</if>
				<if test="maxAge != null and maxAge != ''">
					and x.age &lt;= #{maxAge,jdbcType=INTEGER}
				</if>
				<if test="name != null and name != ''">
					and x.name like #{name,jdbcType=VARCHAR}
				</if>
				<if test="beginTime != null and beginTime != ''">
					and x.create_time &gt;= #{beginTime,jdbcType=VARCHAR}
				</if>
				<if test="endTime != null and endTime != ''">
					and x.create_time &lt;= #{endTime,jdbcType=VARCHAR}
				</if>
				<if test="source != null">
					and x.souce = #{source,jdbcType=INTEGER}
				</if>
				<if test="sex != null">
					and x.sex = #{sex,jdbcType=INTEGER}
				</if>
				<if test="degree != null">
					and x.degree = #{degree,jdbcType=INTEGER}
				</if>
				<if test="expectSalary != null">
					and x.expect_salary = #{expectSalary,jdbcType=INTEGER}
				</if>
				<if test="workYear != null">
					and x.work_year &gt;= #{workYear,jdbcType=INTEGER}
				</if>
				<if test="createUser != null">
					and x.create_user = #{createUser,jdbcType=INTEGER}
				</if>
				<if test="firstId != null">
					AND EXISTS ( 
						SELECT 1 FROM t_yx__worker_jobtype j WHERE x.id = j.worker_id 
						AND j.first_id = #{firstId,jdbcType=INTEGER}
						<if test="secondId != null">
							AND j.second_id = #{secondId,jdbcType=INTEGER}
						</if>
					)
				</if>
				<if test="company != null">
					AND EXISTS ( 
						SELECT 1 FROM t_yx__worker_experience e WHERE x.id = e.worker_id 
						AND e.company like #{company,jdbcType=VARCHAR}
					)
				</if>
				<if test="discipline != null">
					AND EXISTS ( 
						SELECT 1 FROM t_yx__worker_education edu WHERE x.id = edu.worker_id 
						AND edu.discipline like #{discipline,jdbcType=VARCHAR}
					)
				</if>
			</where>
			 order by x.id desc limit #{offset,jdbcType=INTEGER},1
		)
		<if test="idcard != null and idcard != ''">
			and t.idcard = #{idcard,jdbcType=VARCHAR}
		</if>
		<if test="telephone != null and telephone != ''">
			and t.telephone = #{telephone,jdbcType=VARCHAR}
		</if>
		<if test="minAge != null and minAge != ''">
			and t.age &gt;= #{minAge,jdbcType=INTEGER}
		</if>
		<if test="maxAge != null and maxAge != ''">
			and t.age &lt;= #{maxAge,jdbcType=INTEGER}
		</if>
		<if test="name != null and name != ''">
			and t.name like #{name,jdbcType=VARCHAR}
		</if>
		<if test="beginTime != null and beginTime != ''">
			and t.create_time &gt;= #{beginTime,jdbcType=VARCHAR}
		</if>
		<if test="endTime != null and endTime != ''">
			and t.create_time &lt;= #{endTime,jdbcType=VARCHAR}
		</if>
		<if test="source != null">
			and t.souce = #{source,jdbcType=INTEGER}
		</if>
		<if test="sex != null">
			and t.sex = #{sex,jdbcType=INTEGER}
		</if>
		<if test="degree != null">
			and t.degree = #{degree,jdbcType=INTEGER}
		</if>
		<if test="expectSalary != null">
			and t.expect_salary = #{expectSalary,jdbcType=INTEGER}
		</if>
		<if test="workYear != null">
			and t.work_year &gt;= #{workYear,jdbcType=INTEGER}
		</if>
		<if test="createUser != null">
			and t.create_user = #{createUser,jdbcType=INTEGER}
		</if>
		<if test="firstId != null">
			AND EXISTS ( 
				SELECT 1 FROM t_yx__worker_jobtype j WHERE t.id = j.worker_id 
				AND j.first_id = #{firstId,jdbcType=INTEGER}
				<if test="secondId != null">
					AND j.second_id = #{secondId,jdbcType=INTEGER}
				</if>
			)
		</if>
		<if test="company != null">
			AND EXISTS ( 
				SELECT 1 FROM t_yx__worker_experience e WHERE t.id = e.worker_id 
				AND e.company like #{company,jdbcType=VARCHAR}
			)
		</if>
		<if test="discipline != null">
			AND EXISTS ( 
				SELECT 1 FROM t_yx__worker_education edu WHERE t.id = edu.worker_id 
				AND edu.discipline like #{discipline,jdbcType=VARCHAR}
			)
		</if>
	</where>
	order by id desc limit #{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="selectCount" resultType="int" parameterType="map" >
  	SELECT count(1) FROM t_yx_worker t,t_sys_user u 
	<where>
		t.create_user = u.id
		<if test="idcard != null and idcard != ''">
			and t.idcard = #{idcard,jdbcType=VARCHAR}
		</if>
		<if test="telephone != null and telephone != ''">
			and t.telephone = #{telephone,jdbcType=VARCHAR}
		</if>
		<if test="minAge != null and minAge != ''">
			and t.age &gt;= #{minAge,jdbcType=INTEGER}
		</if>
		<if test="maxAge != null and maxAge != ''">
			and t.age &lt;= #{maxAge,jdbcType=INTEGER}
		</if>
		<if test="name != null and name != ''">
			and t.name like #{name,jdbcType=VARCHAR}
		</if>
		<if test="beginTime != null and beginTime != ''">
			and t.create_time &gt;= #{beginTime,jdbcType=VARCHAR}
		</if>
		<if test="endTime != null and endTime != ''">
			and t.create_time &lt;= #{endTime,jdbcType=VARCHAR}
		</if>
		<if test="source != null">
			and t.souce = #{source,jdbcType=INTEGER}
		</if>
		<if test="sex != null">
			and t.sex = #{sex,jdbcType=INTEGER}
		</if>
		<if test="degree != null">
			and t.degree = #{degree,jdbcType=INTEGER}
		</if>
		<if test="expectSalary != null">
			and t.expect_salary = #{expectSalary,jdbcType=INTEGER}
		</if>
		<if test="workYear != null">
			and t.work_year &gt;= #{workYear,jdbcType=INTEGER}
		</if>
		<if test="createUser != null">
			and t.create_user = #{createUser,jdbcType=INTEGER}
		</if>
		<if test="firstId != null">
			AND EXISTS ( 
				SELECT 1 FROM t_yx__worker_jobtype j WHERE t.id = j.worker_id 
				AND j.first_id = #{firstId,jdbcType=INTEGER}
				<if test="secondId != null">
					AND j.second_id = #{secondId,jdbcType=INTEGER}
				</if>
			)
		</if>
		<if test="company != null">
			AND EXISTS ( 
				SELECT 1 FROM t_yx__worker_experience e WHERE t.id = e.worker_id 
				AND e.company like #{company,jdbcType=VARCHAR}
			)
		</if>
		<if test="discipline != null">
			AND EXISTS ( 
				SELECT 1 FROM t_yx__worker_education edu WHERE t.id = edu.worker_id 
				AND edu.discipline like #{discipline,jdbcType=VARCHAR}
			)
		</if>
	</where>
  </select>
  
  

  
    <select id="selectAssignByPage" resultMap="BaseResultMap" parameterType="map" >
  	SELECT
		t.id, t.name, t.photo, t.sex, t.telephone, t.idcard, t.birthplace_code, t.work_year, t.marital_status, 
		t.workplace_code, t.expect_salary,jobtype_name,t.work_expect
	FROM
		t_yx_worker t 
	<where>
		 t.id &lt;= (
			select id from t_yx_worker x
			<where>
				<if test="idcard != null and idcard != ''">
					and x.idcard = #{idcard,jdbcType=VARCHAR}
				</if>
				<if test="telephone != null and telephone != ''">
					and x.telephone = #{telephone,jdbcType=VARCHAR}
				</if>
				<if test="name != null and name != ''">
					and x.name like #{name,jdbcType=VARCHAR}
				</if>
				<if test="demandId != null">
					and x.id NOT IN (
					SELECT
						t_yx_order_worker.worker_id	
					FROM
						t_yx_order_worker
					WHERE
						t_yx_order_worker.demand_job_id IN ( SELECT t_yx_demand_job.id FROM t_yx_demand_job WHERE t_yx_demand_job.demand_id = #{demandId,jdbcType=INTEGER} ))
				</if>
				
			</where>
			 order by x.id desc limit #{offset,jdbcType=INTEGER},1
		)
		<if test="idcard != null and idcard != ''">
			and t.idcard = #{idcard,jdbcType=VARCHAR}
		</if>
		<if test="telephone != null and telephone != ''">
			and t.telephone = #{telephone,jdbcType=VARCHAR}
		</if>
		<if test="name != null and name != ''">
			and t.name like #{name,jdbcType=VARCHAR}
		</if>
		<if test="demandId != null">
			and t.id NOT IN (
			SELECT
				t_yx_order_worker.worker_id	
			FROM
				t_yx_order_worker
			WHERE
				t_yx_order_worker.demand_job_id IN ( SELECT t_yx_demand_job.id FROM t_yx_demand_job WHERE t_yx_demand_job.demand_id = #{demandId,jdbcType=INTEGER} ))
		</if>
		
	</where>
	order by t.id desc limit #{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="selectAssignCount" resultType="int" parameterType="map" >
  	SELECT count(1) FROM t_yx_worker t
	<where>
		<if test="idcard != null and idcard != ''">
			and t.idcard = #{idcard,jdbcType=VARCHAR}
		</if>
		<if test="telephone != null and telephone != ''">
			and t.telephone = #{telephone,jdbcType=VARCHAR}
		</if>
		<if test="name != null and name != ''">
			and t.name like #{name,jdbcType=VARCHAR}
		</if>
		<if test="demandId != null">
			and t.id NOT IN (
			SELECT
				t_yx_order_worker.worker_id	
			FROM
				t_yx_order_worker
			WHERE
				t_yx_order_worker.demand_job_id IN ( SELECT t_yx_demand_job.id FROM t_yx_demand_job WHERE t_yx_demand_job.demand_id = #{demandId,jdbcType=INTEGER}))
		</if>
	</where>
  </select>
  

  <insert id="insertBatch" parameterType="list" >
    insert into t_yx_worker (
    	name, telephone, email, idcard, sex, work_year, degree,
      	marital_status, position, address,souce, create_time, create_user, 
      	profile, description
    )
    values 
    <foreach collection ="list" item="worker" index= "index" separator =",">
    	(
    		#{worker.name,jdbcType=VARCHAR},
    		#{worker.telephone,jdbcType=VARCHAR},
    		#{worker.email,jdbcType=VARCHAR},
    		#{worker.idcard,jdbcType=VARCHAR}, 
    		#{worker.sex,jdbcType=INTEGER},
    		#{worker.workYear,jdbcType=INTEGER}, 
    		#{worker.degree,jdbcType=INTEGER}, 
    		#{worker.maritalStatus,jdbcType=INTEGER},
    		#{worker.position,jdbcType=VARCHAR},
    		#{worker.address,jdbcType=VARCHAR},
    		#{worker.souce,jdbcType=INTEGER},
    		#{worker.createTime,jdbcType=TIMESTAMP},
    		#{worker.createUser,jdbcType=INTEGER}, 
    		#{worker.profile,jdbcType=VARCHAR}, 
    		#{worker.description,jdbcType=VARCHAR}
    	)
    </foreach>
  </insert>
  
  <select id="selectAllCount" resultType="int">
  	select count(1) from t_yx_worker
  </select>
  <select id="selectCountByTime" parameterType="map" resultType="int">
  	select count(1) from t_yx_worker t 
  	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
  </select>
  
  <select id="selectSourcePie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		c.NAME name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		t.souce,
		count( 1 ) c,
		( SELECT count( 1 ) FROM t_yx_worker ) cnt 
	FROM
		t_yx_worker t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		t.souce 
		) x
		LEFT JOIN t_sys_dictionary c ON x.souce = c.CODE 
		AND c.type = 'worker_souce'
  </select>
  
  <select id="selectCreateUserPie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		u.real_name name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		t.create_user,
		count( 1 ) c,
		( SELECT count( 1 ) FROM t_yx_worker ) cnt 
	FROM
		t_yx_worker t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		t.create_user 
		) x
		LEFT JOIN t_sys_user u ON x.create_user = u.id
  </select>
  
  <select id="selectDegreePie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		ifnull(c.NAME,'未知') name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		t.degree,
		count( 1 ) c,
		( SELECT count( 1 ) FROM t_yx_worker ) cnt 
	FROM
		t_yx_worker t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		t.degree
		) x
		LEFT JOIN t_sys_dictionary c ON x.degree = c.CODE 
		AND c.type = 'degree'
  </select>
  
  <select id="selectMonthBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月' ) NAME,
		count( 0 ) count 
	FROM
		t_yx_worker t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月' )
  </select>
  
  <select id="selectDayBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' ) NAME,
		count( 0 ) count 
	FROM
		t_yx_worker t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' )
  </select>
  
  <select id="selectDemandMonthBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月' ) NAME,
		count( 0 ) count 
	FROM
		t_yx_demand t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月' )
  </select>
  
  <select id="selectDemandUnderTakerPie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		ifnull(u.real_name,'其他') name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		t.undertake_user,
		count( 1 ) c,
		( SELECT count( 1 ) FROM t_yx_demand ) cnt 
	FROM
		t_yx_demand t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		t.undertake_user 
		) x
		LEFT JOIN t_sys_user u ON x.undertake_user = u.id
  </select>
  <select id="selectDemandStatePie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		ifnull(c.NAME,'未知') name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		t.state,
		count( 1 ) c,
		( SELECT count( 1 ) FROM t_yx_demand ) cnt 
	FROM
		t_yx_demand t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		t.state
		) x
		LEFT JOIN t_sys_dictionary c ON x.state = c.CODE 
		AND c.type = 'demand_state'
  </select>
  
  <select id="selectOrderMonthBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月' ) NAME,
		count( 0 ) count 
	FROM
		t_yx_demand_order t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月' )
  </select>
  
  <select id="selectOrderUndertakerPie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		ifnull( u.real_name, '其他' ) name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		d.undertake_user,
		count( 1 ) c,
		( SELECT count( 1 ) FROM t_yx_demand_order ) cnt 
	FROM
		t_yx_demand d,
		t_yx_demand_order t 
	<where>
		d.id = t.demand_id
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		d.undertake_user 
		) x
		LEFT JOIN t_sys_user u ON x.undertake_user = u.id
  </select>
  <select id="selectOrderMemberMonthBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月' ) name,
		sum(t.worker_count) count 
	FROM
		t_yx_demand_order t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月' )
  </select>
  
  <select id="selectOrderMemberUndertakerPie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		ifnull( u.real_name, '其他' ) name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		d.undertake_user,
		sum( t.worker_count ) c,
		( SELECT sum( worker_count ) FROM t_yx_demand_order ) cnt 
	FROM
		t_yx_demand d,
		t_yx_demand_order t 
	<where>
		d.id = t.demand_id
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		d.undertake_user 
		) x
		LEFT JOIN t_sys_user u ON x.undertake_user = u.id
  </select>
  
  <select id="selectOrderIncomeMonthBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月' ) name,
		sum(cast(t.total_income as  decimal(10,2))) count 
	FROM
		t_yx_demand_order t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月' )
  </select>
  
  <select id="selectOrderIncomeUndertakerPie" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		x.c count,
		ifnull( u.real_name, '其他' ) name,
		round( ( x.c / x.cnt * 100 ), 2 ) percentage 
	FROM
		(
	SELECT
		d.undertake_user,
		sum(cast(t.total_income as  decimal(10,2))) c,
		( SELECT sum(cast(total_income as  decimal(10,2))) FROM t_yx_demand_order ) cnt 
	FROM
		t_yx_demand d,
		t_yx_demand_order t 
	<where>
		d.id = t.demand_id
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		d.undertake_user 
		) x
		LEFT JOIN t_sys_user u ON x.undertake_user = u.id
  </select>
  
  <select id="selectWorkerCount" resultType="map">
	select '新增人才' name,
	(select count(0) from t_yx_worker t where DATEDIFF(t.create_time, curdate()) = 0) day,
	(select count(0) from t_yx_worker t where t.create_time &gt;= date_sub(curdate(),interval WEEKDAY(curdate()) day)) week,
	(select count(0) from t_yx_worker t where t.create_time &gt;= date_sub(curdate(),interval DAY(curdate())-1 day)) month,
	(select count(0) from t_yx_worker t where t.create_time &gt;= date(concat(year(curdate()),'-',elt(quarter(curdate()),1,4,7,10),'-',1))) season,
	(select count(0) from t_yx_worker t where t.create_time &gt;= DATE_SUB(CURDATE(),INTERVAL dayofyear(now())-1 DAY)) year
  </select>
  
  <select id="selectDemandDayBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' ) NAME,
		count( 0 ) count 
	FROM
		t_yx_demand t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' )
  </select>
  
  <select id="selectOrderDayBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' ) NAME,
		count( 0 ) count 
	FROM
		t_yx_demand_order t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' )
  </select>
  
  <select id="selectOrderMemberDayBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' ) name,
		sum(t.worker_count) count 
	FROM
		t_yx_demand_order t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' )
  </select>
  <select id="selectOrderIncomeDayBar" parameterType="map" resultType="com.wei.boot.model.report.ReportInfo">
  	SELECT
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' ) name,
		sum(cast(t.total_income as  decimal(10,2))) count 
	FROM
		t_yx_demand_order t 
	<where>
  		<if test="beginTime != null">
			and t.create_time &gt;= #{beginTime,jdbcType=TIMESTAMP}
		</if>
		<if test="endTime != null">
			and t.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
		</if>
  	</where>
	GROUP BY
		DATE_FORMAT( t.create_time, '%Y年%m月%d日' )
  </select>
  
</mapper>